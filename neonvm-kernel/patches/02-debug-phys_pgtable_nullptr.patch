diff -ru a/arch/x86/mm/init_64.c b/arch/x86/mm/init_64.c
--- a/arch/x86/mm/init_64.c	2025-06-09 10:43:05.419765067 +0100
+++ b/arch/x86/mm/init_64.c	2025-06-08 16:45:06.997880988 +0100
@@ -577,8 +577,10 @@
 		}
 
 		pte = alloc_low_page();
-		if (!pte)
+		if (!pte) {
+			printk(KERN_INFO "NEON DEBUG: alloc_low_page() pte failed");
 			return (unsigned long)ERR_PTR(-ENOMEM);
+		}
 		paddr_last = phys_pte_init(pte, paddr, paddr_end, new_prot, init);
 		/*
 		 * phys_{ppmd,pud,p4d}_init return allocation errors via ERR_PTR.
@@ -675,8 +677,10 @@
 		}
 
 		pmd = alloc_low_page();
-		if (!pmd)
+		if (!pmd) {
+			printk(KERN_INFO "NEON DEBUG: alloc_low_page() pmd failed");
 			return (unsigned long)ERR_PTR(-ENOMEM);
+		}
 		paddr_last = phys_pmd_init(pmd, paddr, paddr_end,
 					   page_size_mask, prot, init);
 
@@ -742,8 +746,10 @@
 		}
 
 		pud = alloc_low_page();
-		if (!pud)
+		if (!pud) {
+			printk(KERN_INFO "NEON DEBUG: alloc_low_page() pud failed");
 			return (unsigned long)ERR_PTR(-ENOMEM);
+		}
 		paddr_last = phys_pud_init(pud, paddr, __pa(vaddr_end),
 					   page_size_mask, prot, init);
 
@@ -793,8 +799,10 @@
 		}
 
 		p4d = alloc_low_page();
-		if (!p4d)
+		if (!p4d) {
+			printk(KERN_INFO "NEON DEBUG: alloc_low_page() p4d failed");
 			return (unsigned long)ERR_PTR(-ENOMEM);
+		}
 		paddr_last = phys_p4d_init(p4d, __pa(vaddr), __pa(vaddr_end),
 					   page_size_mask, prot, init);
 
@@ -1025,8 +1033,10 @@
 	unsigned long ret = 0;
 
 	ret = init_memory_mapping(start, start + size, params->pgprot);
-	if (IS_ERR(ret))
+	if (IS_ERR(ret)) {
+		printk(KERN_INFO "NEON DEBUG: init_memory_mapping() failed");
 		return (int)PTR_ERR(ret);
+	}
 
 	return add_pages(nid, start_pfn, nr_pages, params);
 }
