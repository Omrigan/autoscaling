# Input to vm-builder to add vm-monitor and cgroups
---
commands:
  - name: cgconfigparser
    user: root
    sysvInitAction: sysinit
    shell: 'cgconfigparser -l /etc/cgconfig.conf -s 1664'
  - name: vm-monitor
    user: vm-monitor
    sysvInitAction: respawn
    shell: 'RUST_LOG=info /usr/local/bin/vm-monitor --addr "0.0.0.0:10301" --cgroup=neon-postgres'

files:
  - filename: cgconfig.conf
    content: |
      group neon-postgres {
          perm {
              admin {
                  uid = vm-monitor;
              }
              task {
                  gid = users;
              }
          }
          memory {}
      }

build: |
  # Build vm-monitor
  FROM rust:1.79-alpine AS monitor-builder
  WORKDIR /workspace

  RUN apk add musl-dev git openssl-dev

  # Which branch to pull from
  ENV BRANCH main

  # Ensures we reclone upon new commits
  # https://stackoverflow.com/questions/35134713
  ADD "https://api.github.com/repos/neondatabase/neon/commits/$BRANCH" latest_commit

  RUN git clone --depth 1 --branch $BRANCH https://github.com/neondatabase/neon.git
  RUN cargo build --release --manifest-path neon/libs/vm_monitor/Cargo.toml
  # Move binary so we can cargo clean
  RUN mkdir -p /workspace/bin && cp /workspace/neon/target/release/vm-monitor /workspace/bin
  # Cargo clean dramatically reduces the size of the image
  RUN cargo clean --release --manifest-path neon/libs/vm_monitor/Cargo.toml

  # Build cgroup-tools
  #
  # At time of writing (2023-03-14), debian bullseye has a version of cgroup-tools (technically
  # libcgroup) that doesn't support cgroup v2 (version 0.41-11). Unfortunately, the vm-monitor
  # requires cgroup v2, so we'll build cgroup-tools ourselves.
  FROM debian:bullseye-slim AS libcgroup-builder
  ENV LIBCGROUP_VERSION v2.0.3

  RUN set -exu \
      && apt update \
      && apt install --no-install-recommends -y \
          git \
          ca-certificates \
          automake \
          cmake \
          make \
          gcc \
          byacc \
          flex \
          libtool \
          libpam0g-dev \
      && git clone --depth 1 -b $LIBCGROUP_VERSION https://github.com/libcgroup/libcgroup \
      && INSTALL_DIR="/libcgroup-install" \
      && mkdir -p "$INSTALL_DIR/bin" "$INSTALL_DIR/include" \
      && cd libcgroup \
      # extracted from bootstrap.sh, with modified flags:
      && (test -d m4 || mkdir m4) \
      && autoreconf -fi \
      && rm -rf autom4te.cache \
      && CFLAGS="-O3" ./configure --prefix="$INSTALL_DIR" --sysconfdir=/etc --localstatedir=/var --enable-opaque-hierarchy="name=systemd" \
      # actually build the thing...
      && make install

merge: |
  RUN adduser --system --disabled-login --no-create-home --home /nonexistent --gecos "monitor user" --shell /bin/false vm-monitor

  COPY cgconfig.conf /etc/cgconfig.conf

  RUN set -e \
        && chmod 0644 /etc/cgconfig.conf

  COPY --from=monitor-builder   /workspace/bin/vm-monitor /usr/local/bin/vm-monitor
  COPY --from=libcgroup-builder /libcgroup-install/bin/*  /usr/bin/
  COPY --from=libcgroup-builder /libcgroup-install/lib/*  /usr/lib/
  COPY --from=libcgroup-builder /libcgroup-install/sbin/* /usr/sbin/

  WORKDIR /home/computeruse


